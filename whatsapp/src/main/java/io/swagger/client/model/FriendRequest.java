/*
 * WhatsApp API
 * A RESTful API for a WhatsApp clone application.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.UUID;
import org.threeten.bp.OffsetDateTime;

/**
 * FriendRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-04-15T13:46:39.360Z")
public class FriendRequest {
  @SerializedName("id")
  private UUID id = null;

  @SerializedName("senderId")
  private UUID senderId = null;

  @SerializedName("receiverId")
  private UUID receiverId = null;

  /**
   * The status of the friend request.
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    PENDING("pending"),
    
    ACCEPTED("accepted"),
    
    REJECTED("rejected"),
    
    CANCELLED("cancelled");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("status")
  private StatusEnum status = null;

  @SerializedName("createdAt")
  private OffsetDateTime createdAt = null;

  public FriendRequest id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * The friend request&#39;s UUID.
   * @return id
  **/
  @ApiModelProperty(value = "The friend request's UUID.")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public FriendRequest senderId(UUID senderId) {
    this.senderId = senderId;
    return this;
  }

   /**
   * The UUID of the user who sent the friend request.
   * @return senderId
  **/
  @ApiModelProperty(value = "The UUID of the user who sent the friend request.")
  public UUID getSenderId() {
    return senderId;
  }

  public void setSenderId(UUID senderId) {
    this.senderId = senderId;
  }

  public FriendRequest receiverId(UUID receiverId) {
    this.receiverId = receiverId;
    return this;
  }

   /**
   * The UUID of the user who received the friend request.
   * @return receiverId
  **/
  @ApiModelProperty(value = "The UUID of the user who received the friend request.")
  public UUID getReceiverId() {
    return receiverId;
  }

  public void setReceiverId(UUID receiverId) {
    this.receiverId = receiverId;
  }

  public FriendRequest status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * The status of the friend request.
   * @return status
  **/
  @ApiModelProperty(value = "The status of the friend request.")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public FriendRequest createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * The timestamp when the friend request was created.
   * @return createdAt
  **/
  @ApiModelProperty(value = "The timestamp when the friend request was created.")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FriendRequest friendRequest = (FriendRequest) o;
    return Objects.equals(this.id, friendRequest.id) &&
        Objects.equals(this.senderId, friendRequest.senderId) &&
        Objects.equals(this.receiverId, friendRequest.receiverId) &&
        Objects.equals(this.status, friendRequest.status) &&
        Objects.equals(this.createdAt, friendRequest.createdAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, senderId, receiverId, status, createdAt);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FriendRequest {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    senderId: ").append(toIndentedString(senderId)).append("\n");
    sb.append("    receiverId: ").append(toIndentedString(receiverId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

