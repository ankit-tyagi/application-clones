/*
 * WhatsApp API
 * A RESTful API for a WhatsApp clone application.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.UUID;
import org.threeten.bp.OffsetDateTime;

/**
 * GroupPermissions
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-04-15T13:46:39.360Z")
public class GroupPermissions {
  @SerializedName("id")
  private UUID id = null;

  @SerializedName("chatId")
  private UUID chatId = null;

  @SerializedName("userId")
  private UUID userId = null;

  /**
   * The type of group permission.
   */
  @JsonAdapter(PermissionTypeEnum.Adapter.class)
  public enum PermissionTypeEnum {
    VIEW("view"),
    
    SEND_MESSAGES("send_messages"),
    
    EDIT("edit"),
    
    DELETE("delete"),
    
    MANAGE("manage");

    private String value;

    PermissionTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PermissionTypeEnum fromValue(String text) {
      for (PermissionTypeEnum b : PermissionTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<PermissionTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PermissionTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PermissionTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return PermissionTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("permissionType")
  private PermissionTypeEnum permissionType = null;

  @SerializedName("createdAt")
  private OffsetDateTime createdAt = null;

  public GroupPermissions id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * The group permission&#39;s UUID.
   * @return id
  **/
  @ApiModelProperty(value = "The group permission's UUID.")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public GroupPermissions chatId(UUID chatId) {
    this.chatId = chatId;
    return this;
  }

   /**
   * The UUID of the group chat.
   * @return chatId
  **/
  @ApiModelProperty(value = "The UUID of the group chat.")
  public UUID getChatId() {
    return chatId;
  }

  public void setChatId(UUID chatId) {
    this.chatId = chatId;
  }

  public GroupPermissions userId(UUID userId) {
    this.userId = userId;
    return this;
  }

   /**
   * The UUID of the user with the group permissions.
   * @return userId
  **/
  @ApiModelProperty(value = "The UUID of the user with the group permissions.")
  public UUID getUserId() {
    return userId;
  }

  public void setUserId(UUID userId) {
    this.userId = userId;
  }

  public GroupPermissions permissionType(PermissionTypeEnum permissionType) {
    this.permissionType = permissionType;
    return this;
  }

   /**
   * The type of group permission.
   * @return permissionType
  **/
  @ApiModelProperty(value = "The type of group permission.")
  public PermissionTypeEnum getPermissionType() {
    return permissionType;
  }

  public void setPermissionType(PermissionTypeEnum permissionType) {
    this.permissionType = permissionType;
  }

  public GroupPermissions createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * The timestamp when the group permission was assigned.
   * @return createdAt
  **/
  @ApiModelProperty(value = "The timestamp when the group permission was assigned.")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GroupPermissions groupPermissions = (GroupPermissions) o;
    return Objects.equals(this.id, groupPermissions.id) &&
        Objects.equals(this.chatId, groupPermissions.chatId) &&
        Objects.equals(this.userId, groupPermissions.userId) &&
        Objects.equals(this.permissionType, groupPermissions.permissionType) &&
        Objects.equals(this.createdAt, groupPermissions.createdAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, chatId, userId, permissionType, createdAt);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GroupPermissions {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    chatId: ").append(toIndentedString(chatId)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    permissionType: ").append(toIndentedString(permissionType)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

