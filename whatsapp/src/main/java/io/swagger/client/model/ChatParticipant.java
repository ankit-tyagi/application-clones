/*
 * WhatsApp API
 * A RESTful API for a WhatsApp clone application.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.UUID;
import org.threeten.bp.OffsetDateTime;

/**
 * ChatParticipant
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-04-15T13:46:39.360Z")
public class ChatParticipant {
  @SerializedName("id")
  private UUID id = null;

  @SerializedName("chatId")
  private UUID chatId = null;

  @SerializedName("userId")
  private UUID userId = null;

  @SerializedName("isAdmin")
  private Boolean isAdmin = null;

  @SerializedName("joinedAt")
  private OffsetDateTime joinedAt = null;

  @SerializedName("updatedAt")
  private OffsetDateTime updatedAt = null;

  public ChatParticipant id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * The chat participant&#39;s UUID.
   * @return id
  **/
  @ApiModelProperty(value = "The chat participant's UUID.")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public ChatParticipant chatId(UUID chatId) {
    this.chatId = chatId;
    return this;
  }

   /**
   * The UUID of the chat.
   * @return chatId
  **/
  @ApiModelProperty(value = "The UUID of the chat.")
  public UUID getChatId() {
    return chatId;
  }

  public void setChatId(UUID chatId) {
    this.chatId = chatId;
  }

  public ChatParticipant userId(UUID userId) {
    this.userId = userId;
    return this;
  }

   /**
   * The UUID of the user who is a participant in the chat.
   * @return userId
  **/
  @ApiModelProperty(value = "The UUID of the user who is a participant in the chat.")
  public UUID getUserId() {
    return userId;
  }

  public void setUserId(UUID userId) {
    this.userId = userId;
  }

  public ChatParticipant isAdmin(Boolean isAdmin) {
    this.isAdmin = isAdmin;
    return this;
  }

   /**
   * Whether the participant is an admin of the group chat.
   * @return isAdmin
  **/
  @ApiModelProperty(value = "Whether the participant is an admin of the group chat.")
  public Boolean isIsAdmin() {
    return isAdmin;
  }

  public void setIsAdmin(Boolean isAdmin) {
    this.isAdmin = isAdmin;
  }

  public ChatParticipant joinedAt(OffsetDateTime joinedAt) {
    this.joinedAt = joinedAt;
    return this;
  }

   /**
   * The timestamp when the participant joined the chat.
   * @return joinedAt
  **/
  @ApiModelProperty(value = "The timestamp when the participant joined the chat.")
  public OffsetDateTime getJoinedAt() {
    return joinedAt;
  }

  public void setJoinedAt(OffsetDateTime joinedAt) {
    this.joinedAt = joinedAt;
  }

  public ChatParticipant updatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * The timestamp when the chat participant was last updated.
   * @return updatedAt
  **/
  @ApiModelProperty(value = "The timestamp when the chat participant was last updated.")
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChatParticipant chatParticipant = (ChatParticipant) o;
    return Objects.equals(this.id, chatParticipant.id) &&
        Objects.equals(this.chatId, chatParticipant.chatId) &&
        Objects.equals(this.userId, chatParticipant.userId) &&
        Objects.equals(this.isAdmin, chatParticipant.isAdmin) &&
        Objects.equals(this.joinedAt, chatParticipant.joinedAt) &&
        Objects.equals(this.updatedAt, chatParticipant.updatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, chatId, userId, isAdmin, joinedAt, updatedAt);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChatParticipant {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    chatId: ").append(toIndentedString(chatId)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    isAdmin: ").append(toIndentedString(isAdmin)).append("\n");
    sb.append("    joinedAt: ").append(toIndentedString(joinedAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

